// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import duration "github.com/golang/protobuf/ptypes/duration"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Indicates the type of speech event.
type StreamingRecognizeResponse_SpeechEventType int32

const (
	// No speech event specified.
	StreamingRecognizeResponse_SPEECH_EVENT_UNSPECIFIED StreamingRecognizeResponse_SpeechEventType = 0
	// This event indicates that the server has detected the end of the user's
	// speech utterance and expects no additional speech. Therefore, the server
	// will not process additional audio (although it may subsequently return
	// additional results). The client should stop sending additional audio
	// data, half-close the gRPC connection, and wait for any additional results
	// until the server closes the gRPC connection. This event is only sent if
	// `single_utterance` was set to `true`, and is not used otherwise.
	StreamingRecognizeResponse_END_OF_SINGLE_UTTERANCE StreamingRecognizeResponse_SpeechEventType = 1
)

var StreamingRecognizeResponse_SpeechEventType_name = map[int32]string{
	0: "SPEECH_EVENT_UNSPECIFIED",
	1: "END_OF_SINGLE_UTTERANCE",
}
var StreamingRecognizeResponse_SpeechEventType_value = map[string]int32{
	"SPEECH_EVENT_UNSPECIFIED": 0,
	"END_OF_SINGLE_UTTERANCE":  1,
}

func (x StreamingRecognizeResponse_SpeechEventType) String() string {
	return proto.EnumName(StreamingRecognizeResponse_SpeechEventType_name, int32(x))
}
func (StreamingRecognizeResponse_SpeechEventType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_service_5a9383d21dc7bc3c, []int{12, 0}
}

type OpenVAServerResponse struct {
	TextResponse         string         `protobuf:"bytes,1,opt,name=TextResponse,proto3" json:"TextResponse,omitempty"`
	IsError              bool           `protobuf:"varint,2,opt,name=IsError,proto3" json:"IsError,omitempty"`
	Items                []*LibraryItem `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *OpenVAServerResponse) Reset()         { *m = OpenVAServerResponse{} }
func (m *OpenVAServerResponse) String() string { return proto.CompactTextString(m) }
func (*OpenVAServerResponse) ProtoMessage()    {}
func (*OpenVAServerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_5a9383d21dc7bc3c, []int{0}
}
func (m *OpenVAServerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpenVAServerResponse.Unmarshal(m, b)
}
func (m *OpenVAServerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpenVAServerResponse.Marshal(b, m, deterministic)
}
func (dst *OpenVAServerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpenVAServerResponse.Merge(dst, src)
}
func (m *OpenVAServerResponse) XXX_Size() int {
	return xxx_messageInfo_OpenVAServerResponse.Size(m)
}
func (m *OpenVAServerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OpenVAServerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OpenVAServerResponse proto.InternalMessageInfo

func (m *OpenVAServerResponse) GetTextResponse() string {
	if m != nil {
		return m.TextResponse
	}
	return ""
}

func (m *OpenVAServerResponse) GetIsError() bool {
	if m != nil {
		return m.IsError
	}
	return false
}

func (m *OpenVAServerResponse) GetItems() []*LibraryItem {
	if m != nil {
		return m.Items
	}
	return nil
}

type ClientMessage struct {
	SystemUUID           string   `protobuf:"bytes,1,opt,name=SystemUUID,proto3" json:"SystemUUID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientMessage) Reset()         { *m = ClientMessage{} }
func (m *ClientMessage) String() string { return proto.CompactTextString(m) }
func (*ClientMessage) ProtoMessage()    {}
func (*ClientMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_5a9383d21dc7bc3c, []int{1}
}
func (m *ClientMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientMessage.Unmarshal(m, b)
}
func (m *ClientMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientMessage.Marshal(b, m, deterministic)
}
func (dst *ClientMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientMessage.Merge(dst, src)
}
func (m *ClientMessage) XXX_Size() int {
	return xxx_messageInfo_ClientMessage.Size(m)
}
func (m *ClientMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ClientMessage proto.InternalMessageInfo

func (m *ClientMessage) GetSystemUUID() string {
	if m != nil {
		return m.SystemUUID
	}
	return ""
}

type ClientConfigMessage struct {
	Locale               *LocaleMessage `protobuf:"bytes,1,opt,name=Locale,proto3" json:"Locale,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ClientConfigMessage) Reset()         { *m = ClientConfigMessage{} }
func (m *ClientConfigMessage) String() string { return proto.CompactTextString(m) }
func (*ClientConfigMessage) ProtoMessage()    {}
func (*ClientConfigMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_5a9383d21dc7bc3c, []int{2}
}
func (m *ClientConfigMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientConfigMessage.Unmarshal(m, b)
}
func (m *ClientConfigMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientConfigMessage.Marshal(b, m, deterministic)
}
func (dst *ClientConfigMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientConfigMessage.Merge(dst, src)
}
func (m *ClientConfigMessage) XXX_Size() int {
	return xxx_messageInfo_ClientConfigMessage.Size(m)
}
func (m *ClientConfigMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientConfigMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ClientConfigMessage proto.InternalMessageInfo

func (m *ClientConfigMessage) GetLocale() *LocaleMessage {
	if m != nil {
		return m.Locale
	}
	return nil
}

type LocaleMessage struct {
	LocaleName                string   `protobuf:"bytes,1,opt,name=LocaleName,proto3" json:"LocaleName,omitempty"`
	LocaleLanguage            string   `protobuf:"bytes,2,opt,name=LocaleLanguage,proto3" json:"LocaleLanguage,omitempty"`
	VolumeMessage             string   `protobuf:"bytes,3,opt,name=VolumeMessage,proto3" json:"VolumeMessage,omitempty"`
	PauseMessage              string   `protobuf:"bytes,4,opt,name=PauseMessage,proto3" json:"PauseMessage,omitempty"`
	ResumeMessage             string   `protobuf:"bytes,5,opt,name=ResumeMessage,proto3" json:"ResumeMessage,omitempty"`
	StopMessage               string   `protobuf:"bytes,6,opt,name=StopMessage,proto3" json:"StopMessage,omitempty"`
	NextMessage               string   `protobuf:"bytes,7,opt,name=NextMessage,proto3" json:"NextMessage,omitempty"`
	PreviousMessage           string   `protobuf:"bytes,8,opt,name=PreviousMessage,proto3" json:"PreviousMessage,omitempty"`
	RebootMessage             string   `protobuf:"bytes,9,opt,name=RebootMessage,proto3" json:"RebootMessage,omitempty"`
	CouldNotUnderstandMessage string   `protobuf:"bytes,10,opt,name=CouldNotUnderstandMessage,proto3" json:"CouldNotUnderstandMessage,omitempty"`
	XXX_NoUnkeyedLiteral      struct{} `json:"-"`
	XXX_unrecognized          []byte   `json:"-"`
	XXX_sizecache             int32    `json:"-"`
}

func (m *LocaleMessage) Reset()         { *m = LocaleMessage{} }
func (m *LocaleMessage) String() string { return proto.CompactTextString(m) }
func (*LocaleMessage) ProtoMessage()    {}
func (*LocaleMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_5a9383d21dc7bc3c, []int{3}
}
func (m *LocaleMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LocaleMessage.Unmarshal(m, b)
}
func (m *LocaleMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LocaleMessage.Marshal(b, m, deterministic)
}
func (dst *LocaleMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LocaleMessage.Merge(dst, src)
}
func (m *LocaleMessage) XXX_Size() int {
	return xxx_messageInfo_LocaleMessage.Size(m)
}
func (m *LocaleMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_LocaleMessage.DiscardUnknown(m)
}

var xxx_messageInfo_LocaleMessage proto.InternalMessageInfo

func (m *LocaleMessage) GetLocaleName() string {
	if m != nil {
		return m.LocaleName
	}
	return ""
}

func (m *LocaleMessage) GetLocaleLanguage() string {
	if m != nil {
		return m.LocaleLanguage
	}
	return ""
}

func (m *LocaleMessage) GetVolumeMessage() string {
	if m != nil {
		return m.VolumeMessage
	}
	return ""
}

func (m *LocaleMessage) GetPauseMessage() string {
	if m != nil {
		return m.PauseMessage
	}
	return ""
}

func (m *LocaleMessage) GetResumeMessage() string {
	if m != nil {
		return m.ResumeMessage
	}
	return ""
}

func (m *LocaleMessage) GetStopMessage() string {
	if m != nil {
		return m.StopMessage
	}
	return ""
}

func (m *LocaleMessage) GetNextMessage() string {
	if m != nil {
		return m.NextMessage
	}
	return ""
}

func (m *LocaleMessage) GetPreviousMessage() string {
	if m != nil {
		return m.PreviousMessage
	}
	return ""
}

func (m *LocaleMessage) GetRebootMessage() string {
	if m != nil {
		return m.RebootMessage
	}
	return ""
}

func (m *LocaleMessage) GetCouldNotUnderstandMessage() string {
	if m != nil {
		return m.CouldNotUnderstandMessage
	}
	return ""
}

type HeartBeatMessage struct {
	SystemInformation    *SystemInformationMessage `protobuf:"bytes,1,opt,name=SystemInformation,proto3" json:"SystemInformation,omitempty"`
	PlayerState          *PlayerStateMessage       `protobuf:"bytes,2,opt,name=PlayerState,proto3" json:"PlayerState,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *HeartBeatMessage) Reset()         { *m = HeartBeatMessage{} }
func (m *HeartBeatMessage) String() string { return proto.CompactTextString(m) }
func (*HeartBeatMessage) ProtoMessage()    {}
func (*HeartBeatMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_5a9383d21dc7bc3c, []int{4}
}
func (m *HeartBeatMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeartBeatMessage.Unmarshal(m, b)
}
func (m *HeartBeatMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeartBeatMessage.Marshal(b, m, deterministic)
}
func (dst *HeartBeatMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeartBeatMessage.Merge(dst, src)
}
func (m *HeartBeatMessage) XXX_Size() int {
	return xxx_messageInfo_HeartBeatMessage.Size(m)
}
func (m *HeartBeatMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_HeartBeatMessage.DiscardUnknown(m)
}

var xxx_messageInfo_HeartBeatMessage proto.InternalMessageInfo

func (m *HeartBeatMessage) GetSystemInformation() *SystemInformationMessage {
	if m != nil {
		return m.SystemInformation
	}
	return nil
}

func (m *HeartBeatMessage) GetPlayerState() *PlayerStateMessage {
	if m != nil {
		return m.PlayerState
	}
	return nil
}

type PlayerStateMessage struct {
	NowPlaying           string   `protobuf:"bytes,1,opt,name=NowPlaying,proto3" json:"NowPlaying,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerStateMessage) Reset()         { *m = PlayerStateMessage{} }
func (m *PlayerStateMessage) String() string { return proto.CompactTextString(m) }
func (*PlayerStateMessage) ProtoMessage()    {}
func (*PlayerStateMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_5a9383d21dc7bc3c, []int{5}
}
func (m *PlayerStateMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerStateMessage.Unmarshal(m, b)
}
func (m *PlayerStateMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerStateMessage.Marshal(b, m, deterministic)
}
func (dst *PlayerStateMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerStateMessage.Merge(dst, src)
}
func (m *PlayerStateMessage) XXX_Size() int {
	return xxx_messageInfo_PlayerStateMessage.Size(m)
}
func (m *PlayerStateMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerStateMessage.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerStateMessage proto.InternalMessageInfo

func (m *PlayerStateMessage) GetNowPlaying() string {
	if m != nil {
		return m.NowPlaying
	}
	return ""
}

type SystemInformationMessage struct {
	SystemUUID           string                       `protobuf:"bytes,1,opt,name=SystemUUID,proto3" json:"SystemUUID,omitempty"`
	UptimeSinceEpoch     int64                        `protobuf:"varint,2,opt,name=UptimeSinceEpoch,proto3" json:"UptimeSinceEpoch,omitempty"`
	NetworkConfiguration *NetworkConfigurationMessage `protobuf:"bytes,3,opt,name=NetworkConfiguration,proto3" json:"NetworkConfiguration,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *SystemInformationMessage) Reset()         { *m = SystemInformationMessage{} }
func (m *SystemInformationMessage) String() string { return proto.CompactTextString(m) }
func (*SystemInformationMessage) ProtoMessage()    {}
func (*SystemInformationMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_5a9383d21dc7bc3c, []int{6}
}
func (m *SystemInformationMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SystemInformationMessage.Unmarshal(m, b)
}
func (m *SystemInformationMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SystemInformationMessage.Marshal(b, m, deterministic)
}
func (dst *SystemInformationMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SystemInformationMessage.Merge(dst, src)
}
func (m *SystemInformationMessage) XXX_Size() int {
	return xxx_messageInfo_SystemInformationMessage.Size(m)
}
func (m *SystemInformationMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_SystemInformationMessage.DiscardUnknown(m)
}

var xxx_messageInfo_SystemInformationMessage proto.InternalMessageInfo

func (m *SystemInformationMessage) GetSystemUUID() string {
	if m != nil {
		return m.SystemUUID
	}
	return ""
}

func (m *SystemInformationMessage) GetUptimeSinceEpoch() int64 {
	if m != nil {
		return m.UptimeSinceEpoch
	}
	return 0
}

func (m *SystemInformationMessage) GetNetworkConfiguration() *NetworkConfigurationMessage {
	if m != nil {
		return m.NetworkConfiguration
	}
	return nil
}

type NetworkConfigurationMessage struct {
	IPAddress            string   `protobuf:"bytes,1,opt,name=IPAddress,proto3" json:"IPAddress,omitempty"`
	NetMask              string   `protobuf:"bytes,2,opt,name=NetMask,proto3" json:"NetMask,omitempty"`
	Gateway              string   `protobuf:"bytes,3,opt,name=Gateway,proto3" json:"Gateway,omitempty"`
	DNSServers           string   `protobuf:"bytes,4,opt,name=DNSServers,proto3" json:"DNSServers,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkConfigurationMessage) Reset()         { *m = NetworkConfigurationMessage{} }
func (m *NetworkConfigurationMessage) String() string { return proto.CompactTextString(m) }
func (*NetworkConfigurationMessage) ProtoMessage()    {}
func (*NetworkConfigurationMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_5a9383d21dc7bc3c, []int{7}
}
func (m *NetworkConfigurationMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkConfigurationMessage.Unmarshal(m, b)
}
func (m *NetworkConfigurationMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkConfigurationMessage.Marshal(b, m, deterministic)
}
func (dst *NetworkConfigurationMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkConfigurationMessage.Merge(dst, src)
}
func (m *NetworkConfigurationMessage) XXX_Size() int {
	return xxx_messageInfo_NetworkConfigurationMessage.Size(m)
}
func (m *NetworkConfigurationMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkConfigurationMessage.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkConfigurationMessage proto.InternalMessageInfo

func (m *NetworkConfigurationMessage) GetIPAddress() string {
	if m != nil {
		return m.IPAddress
	}
	return ""
}

func (m *NetworkConfigurationMessage) GetNetMask() string {
	if m != nil {
		return m.NetMask
	}
	return ""
}

func (m *NetworkConfigurationMessage) GetGateway() string {
	if m != nil {
		return m.Gateway
	}
	return ""
}

func (m *NetworkConfigurationMessage) GetDNSServers() string {
	if m != nil {
		return m.DNSServers
	}
	return ""
}

type LibraryItem struct {
	URL                  string   `protobuf:"bytes,1,opt,name=URL,proto3" json:"URL,omitempty"`
	Artist               string   `protobuf:"bytes,2,opt,name=Artist,proto3" json:"Artist,omitempty"`
	Album                string   `protobuf:"bytes,3,opt,name=Album,proto3" json:"Album,omitempty"`
	Track                string   `protobuf:"bytes,4,opt,name=Track,proto3" json:"Track,omitempty"`
	Length               int32    `protobuf:"varint,5,opt,name=Length,proto3" json:"Length,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LibraryItem) Reset()         { *m = LibraryItem{} }
func (m *LibraryItem) String() string { return proto.CompactTextString(m) }
func (*LibraryItem) ProtoMessage()    {}
func (*LibraryItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_5a9383d21dc7bc3c, []int{8}
}
func (m *LibraryItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LibraryItem.Unmarshal(m, b)
}
func (m *LibraryItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LibraryItem.Marshal(b, m, deterministic)
}
func (dst *LibraryItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LibraryItem.Merge(dst, src)
}
func (m *LibraryItem) XXX_Size() int {
	return xxx_messageInfo_LibraryItem.Size(m)
}
func (m *LibraryItem) XXX_DiscardUnknown() {
	xxx_messageInfo_LibraryItem.DiscardUnknown(m)
}

var xxx_messageInfo_LibraryItem proto.InternalMessageInfo

func (m *LibraryItem) GetURL() string {
	if m != nil {
		return m.URL
	}
	return ""
}

func (m *LibraryItem) GetArtist() string {
	if m != nil {
		return m.Artist
	}
	return ""
}

func (m *LibraryItem) GetAlbum() string {
	if m != nil {
		return m.Album
	}
	return ""
}

func (m *LibraryItem) GetTrack() string {
	if m != nil {
		return m.Track
	}
	return ""
}

func (m *LibraryItem) GetLength() int32 {
	if m != nil {
		return m.Length
	}
	return 0
}

type TTSRequest struct {
	Text                 string   `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TTSRequest) Reset()         { *m = TTSRequest{} }
func (m *TTSRequest) String() string { return proto.CompactTextString(m) }
func (*TTSRequest) ProtoMessage()    {}
func (*TTSRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_5a9383d21dc7bc3c, []int{9}
}
func (m *TTSRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TTSRequest.Unmarshal(m, b)
}
func (m *TTSRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TTSRequest.Marshal(b, m, deterministic)
}
func (dst *TTSRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TTSRequest.Merge(dst, src)
}
func (m *TTSRequest) XXX_Size() int {
	return xxx_messageInfo_TTSRequest.Size(m)
}
func (m *TTSRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TTSRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TTSRequest proto.InternalMessageInfo

func (m *TTSRequest) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type TTSReply struct {
	MP3Response          []byte   `protobuf:"bytes,1,opt,name=MP3Response,proto3" json:"MP3Response,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TTSReply) Reset()         { *m = TTSReply{} }
func (m *TTSReply) String() string { return proto.CompactTextString(m) }
func (*TTSReply) ProtoMessage()    {}
func (*TTSReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_5a9383d21dc7bc3c, []int{10}
}
func (m *TTSReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TTSReply.Unmarshal(m, b)
}
func (m *TTSReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TTSReply.Marshal(b, m, deterministic)
}
func (dst *TTSReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TTSReply.Merge(dst, src)
}
func (m *TTSReply) XXX_Size() int {
	return xxx_messageInfo_TTSReply.Size(m)
}
func (m *TTSReply) XXX_DiscardUnknown() {
	xxx_messageInfo_TTSReply.DiscardUnknown(m)
}

var xxx_messageInfo_TTSReply proto.InternalMessageInfo

func (m *TTSReply) GetMP3Response() []byte {
	if m != nil {
		return m.MP3Response
	}
	return nil
}

type STTRequest struct {
	STTBuffer            []byte   `protobuf:"bytes,1,opt,name=STTBuffer,proto3" json:"STTBuffer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *STTRequest) Reset()         { *m = STTRequest{} }
func (m *STTRequest) String() string { return proto.CompactTextString(m) }
func (*STTRequest) ProtoMessage()    {}
func (*STTRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_5a9383d21dc7bc3c, []int{11}
}
func (m *STTRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_STTRequest.Unmarshal(m, b)
}
func (m *STTRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_STTRequest.Marshal(b, m, deterministic)
}
func (dst *STTRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_STTRequest.Merge(dst, src)
}
func (m *STTRequest) XXX_Size() int {
	return xxx_messageInfo_STTRequest.Size(m)
}
func (m *STTRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_STTRequest.DiscardUnknown(m)
}

var xxx_messageInfo_STTRequest proto.InternalMessageInfo

func (m *STTRequest) GetSTTBuffer() []byte {
	if m != nil {
		return m.STTBuffer
	}
	return nil
}

type StreamingRecognizeResponse struct {
	// Output only. This repeated list contains zero or more results that
	// correspond to consecutive portions of the audio currently being processed.
	// It contains zero or one `is_final=true` result (the newly settled portion),
	// followed by zero or more `is_final=false` results (the interim results).
	Results []*StreamingRecognitionResult `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
	// Output only. Indicates the type of speech event.
	SpeechEventType      StreamingRecognizeResponse_SpeechEventType `protobuf:"varint,4,opt,name=speech_event_type,json=speechEventType,proto3,enum=api.StreamingRecognizeResponse_SpeechEventType" json:"speech_event_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                   `json:"-"`
	XXX_unrecognized     []byte                                     `json:"-"`
	XXX_sizecache        int32                                      `json:"-"`
}

func (m *StreamingRecognizeResponse) Reset()         { *m = StreamingRecognizeResponse{} }
func (m *StreamingRecognizeResponse) String() string { return proto.CompactTextString(m) }
func (*StreamingRecognizeResponse) ProtoMessage()    {}
func (*StreamingRecognizeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_5a9383d21dc7bc3c, []int{12}
}
func (m *StreamingRecognizeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamingRecognizeResponse.Unmarshal(m, b)
}
func (m *StreamingRecognizeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamingRecognizeResponse.Marshal(b, m, deterministic)
}
func (dst *StreamingRecognizeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamingRecognizeResponse.Merge(dst, src)
}
func (m *StreamingRecognizeResponse) XXX_Size() int {
	return xxx_messageInfo_StreamingRecognizeResponse.Size(m)
}
func (m *StreamingRecognizeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamingRecognizeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StreamingRecognizeResponse proto.InternalMessageInfo

func (m *StreamingRecognizeResponse) GetResults() []*StreamingRecognitionResult {
	if m != nil {
		return m.Results
	}
	return nil
}

func (m *StreamingRecognizeResponse) GetSpeechEventType() StreamingRecognizeResponse_SpeechEventType {
	if m != nil {
		return m.SpeechEventType
	}
	return StreamingRecognizeResponse_SPEECH_EVENT_UNSPECIFIED
}

type StreamingRecognitionResult struct {
	Alternatives         []*SpeechRecognitionAlternative `protobuf:"bytes,1,rep,name=alternatives,proto3" json:"alternatives,omitempty"`
	IsFinal              bool                            `protobuf:"varint,2,opt,name=is_final,json=isFinal,proto3" json:"is_final,omitempty"`
	Stability            float32                         `protobuf:"fixed32,3,opt,name=stability,proto3" json:"stability,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *StreamingRecognitionResult) Reset()         { *m = StreamingRecognitionResult{} }
func (m *StreamingRecognitionResult) String() string { return proto.CompactTextString(m) }
func (*StreamingRecognitionResult) ProtoMessage()    {}
func (*StreamingRecognitionResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_5a9383d21dc7bc3c, []int{13}
}
func (m *StreamingRecognitionResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamingRecognitionResult.Unmarshal(m, b)
}
func (m *StreamingRecognitionResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamingRecognitionResult.Marshal(b, m, deterministic)
}
func (dst *StreamingRecognitionResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamingRecognitionResult.Merge(dst, src)
}
func (m *StreamingRecognitionResult) XXX_Size() int {
	return xxx_messageInfo_StreamingRecognitionResult.Size(m)
}
func (m *StreamingRecognitionResult) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamingRecognitionResult.DiscardUnknown(m)
}

var xxx_messageInfo_StreamingRecognitionResult proto.InternalMessageInfo

func (m *StreamingRecognitionResult) GetAlternatives() []*SpeechRecognitionAlternative {
	if m != nil {
		return m.Alternatives
	}
	return nil
}

func (m *StreamingRecognitionResult) GetIsFinal() bool {
	if m != nil {
		return m.IsFinal
	}
	return false
}

func (m *StreamingRecognitionResult) GetStability() float32 {
	if m != nil {
		return m.Stability
	}
	return 0
}

type SpeechRecognitionAlternative struct {
	Transcript           string      `protobuf:"bytes,1,opt,name=transcript,proto3" json:"transcript,omitempty"`
	Confidence           float32     `protobuf:"fixed32,2,opt,name=confidence,proto3" json:"confidence,omitempty"`
	Words                []*WordInfo `protobuf:"bytes,3,rep,name=words,proto3" json:"words,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *SpeechRecognitionAlternative) Reset()         { *m = SpeechRecognitionAlternative{} }
func (m *SpeechRecognitionAlternative) String() string { return proto.CompactTextString(m) }
func (*SpeechRecognitionAlternative) ProtoMessage()    {}
func (*SpeechRecognitionAlternative) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_5a9383d21dc7bc3c, []int{14}
}
func (m *SpeechRecognitionAlternative) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpeechRecognitionAlternative.Unmarshal(m, b)
}
func (m *SpeechRecognitionAlternative) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpeechRecognitionAlternative.Marshal(b, m, deterministic)
}
func (dst *SpeechRecognitionAlternative) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpeechRecognitionAlternative.Merge(dst, src)
}
func (m *SpeechRecognitionAlternative) XXX_Size() int {
	return xxx_messageInfo_SpeechRecognitionAlternative.Size(m)
}
func (m *SpeechRecognitionAlternative) XXX_DiscardUnknown() {
	xxx_messageInfo_SpeechRecognitionAlternative.DiscardUnknown(m)
}

var xxx_messageInfo_SpeechRecognitionAlternative proto.InternalMessageInfo

func (m *SpeechRecognitionAlternative) GetTranscript() string {
	if m != nil {
		return m.Transcript
	}
	return ""
}

func (m *SpeechRecognitionAlternative) GetConfidence() float32 {
	if m != nil {
		return m.Confidence
	}
	return 0
}

func (m *SpeechRecognitionAlternative) GetWords() []*WordInfo {
	if m != nil {
		return m.Words
	}
	return nil
}

type WordInfo struct {
	StartTime            *duration.Duration `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime              *duration.Duration `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Word                 string             `protobuf:"bytes,3,opt,name=word,proto3" json:"word,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *WordInfo) Reset()         { *m = WordInfo{} }
func (m *WordInfo) String() string { return proto.CompactTextString(m) }
func (*WordInfo) ProtoMessage()    {}
func (*WordInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_5a9383d21dc7bc3c, []int{15}
}
func (m *WordInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WordInfo.Unmarshal(m, b)
}
func (m *WordInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WordInfo.Marshal(b, m, deterministic)
}
func (dst *WordInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WordInfo.Merge(dst, src)
}
func (m *WordInfo) XXX_Size() int {
	return xxx_messageInfo_WordInfo.Size(m)
}
func (m *WordInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_WordInfo.DiscardUnknown(m)
}

var xxx_messageInfo_WordInfo proto.InternalMessageInfo

func (m *WordInfo) GetStartTime() *duration.Duration {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *WordInfo) GetEndTime() *duration.Duration {
	if m != nil {
		return m.EndTime
	}
	return nil
}

func (m *WordInfo) GetWord() string {
	if m != nil {
		return m.Word
	}
	return ""
}

func init() {
	proto.RegisterType((*OpenVAServerResponse)(nil), "api.OpenVAServerResponse")
	proto.RegisterType((*ClientMessage)(nil), "api.ClientMessage")
	proto.RegisterType((*ClientConfigMessage)(nil), "api.ClientConfigMessage")
	proto.RegisterType((*LocaleMessage)(nil), "api.LocaleMessage")
	proto.RegisterType((*HeartBeatMessage)(nil), "api.HeartBeatMessage")
	proto.RegisterType((*PlayerStateMessage)(nil), "api.PlayerStateMessage")
	proto.RegisterType((*SystemInformationMessage)(nil), "api.SystemInformationMessage")
	proto.RegisterType((*NetworkConfigurationMessage)(nil), "api.NetworkConfigurationMessage")
	proto.RegisterType((*LibraryItem)(nil), "api.LibraryItem")
	proto.RegisterType((*TTSRequest)(nil), "api.TTSRequest")
	proto.RegisterType((*TTSReply)(nil), "api.TTSReply")
	proto.RegisterType((*STTRequest)(nil), "api.STTRequest")
	proto.RegisterType((*StreamingRecognizeResponse)(nil), "api.StreamingRecognizeResponse")
	proto.RegisterType((*StreamingRecognitionResult)(nil), "api.StreamingRecognitionResult")
	proto.RegisterType((*SpeechRecognitionAlternative)(nil), "api.SpeechRecognitionAlternative")
	proto.RegisterType((*WordInfo)(nil), "api.WordInfo")
	proto.RegisterEnum("api.StreamingRecognizeResponse_SpeechEventType", StreamingRecognizeResponse_SpeechEventType_name, StreamingRecognizeResponse_SpeechEventType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// OpenVAServiceClient is the client API for OpenVAService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OpenVAServiceClient interface {
	TTSStringToMP3(ctx context.Context, in *TTSRequest, opts ...grpc.CallOption) (*TTSReply, error)
	STT(ctx context.Context, opts ...grpc.CallOption) (OpenVAService_STTClient, error)
	HeartBeat(ctx context.Context, opts ...grpc.CallOption) (OpenVAService_HeartBeatClient, error)
	ClientConfig(ctx context.Context, in *ClientMessage, opts ...grpc.CallOption) (*ClientConfigMessage, error)
	HandleServerSideCommand(ctx context.Context, in *TTSRequest, opts ...grpc.CallOption) (*OpenVAServerResponse, error)
}

type openVAServiceClient struct {
	cc *grpc.ClientConn
}

func NewOpenVAServiceClient(cc *grpc.ClientConn) OpenVAServiceClient {
	return &openVAServiceClient{cc}
}

func (c *openVAServiceClient) TTSStringToMP3(ctx context.Context, in *TTSRequest, opts ...grpc.CallOption) (*TTSReply, error) {
	out := new(TTSReply)
	err := c.cc.Invoke(ctx, "/api.OpenVAService/TTSStringToMP3", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openVAServiceClient) STT(ctx context.Context, opts ...grpc.CallOption) (OpenVAService_STTClient, error) {
	stream, err := c.cc.NewStream(ctx, &_OpenVAService_serviceDesc.Streams[0], "/api.OpenVAService/STT", opts...)
	if err != nil {
		return nil, err
	}
	x := &openVAServiceSTTClient{stream}
	return x, nil
}

type OpenVAService_STTClient interface {
	Send(*STTRequest) error
	Recv() (*StreamingRecognizeResponse, error)
	grpc.ClientStream
}

type openVAServiceSTTClient struct {
	grpc.ClientStream
}

func (x *openVAServiceSTTClient) Send(m *STTRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *openVAServiceSTTClient) Recv() (*StreamingRecognizeResponse, error) {
	m := new(StreamingRecognizeResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *openVAServiceClient) HeartBeat(ctx context.Context, opts ...grpc.CallOption) (OpenVAService_HeartBeatClient, error) {
	stream, err := c.cc.NewStream(ctx, &_OpenVAService_serviceDesc.Streams[1], "/api.OpenVAService/HeartBeat", opts...)
	if err != nil {
		return nil, err
	}
	x := &openVAServiceHeartBeatClient{stream}
	return x, nil
}

type OpenVAService_HeartBeatClient interface {
	Send(*HeartBeatMessage) error
	Recv() (*HeartBeatMessage, error)
	grpc.ClientStream
}

type openVAServiceHeartBeatClient struct {
	grpc.ClientStream
}

func (x *openVAServiceHeartBeatClient) Send(m *HeartBeatMessage) error {
	return x.ClientStream.SendMsg(m)
}

func (x *openVAServiceHeartBeatClient) Recv() (*HeartBeatMessage, error) {
	m := new(HeartBeatMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *openVAServiceClient) ClientConfig(ctx context.Context, in *ClientMessage, opts ...grpc.CallOption) (*ClientConfigMessage, error) {
	out := new(ClientConfigMessage)
	err := c.cc.Invoke(ctx, "/api.OpenVAService/ClientConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openVAServiceClient) HandleServerSideCommand(ctx context.Context, in *TTSRequest, opts ...grpc.CallOption) (*OpenVAServerResponse, error) {
	out := new(OpenVAServerResponse)
	err := c.cc.Invoke(ctx, "/api.OpenVAService/HandleServerSideCommand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OpenVAServiceServer is the server API for OpenVAService service.
type OpenVAServiceServer interface {
	TTSStringToMP3(context.Context, *TTSRequest) (*TTSReply, error)
	STT(OpenVAService_STTServer) error
	HeartBeat(OpenVAService_HeartBeatServer) error
	ClientConfig(context.Context, *ClientMessage) (*ClientConfigMessage, error)
	HandleServerSideCommand(context.Context, *TTSRequest) (*OpenVAServerResponse, error)
}

func RegisterOpenVAServiceServer(s *grpc.Server, srv OpenVAServiceServer) {
	s.RegisterService(&_OpenVAService_serviceDesc, srv)
}

func _OpenVAService_TTSStringToMP3_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TTSRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenVAServiceServer).TTSStringToMP3(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.OpenVAService/TTSStringToMP3",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenVAServiceServer).TTSStringToMP3(ctx, req.(*TTSRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenVAService_STT_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(OpenVAServiceServer).STT(&openVAServiceSTTServer{stream})
}

type OpenVAService_STTServer interface {
	Send(*StreamingRecognizeResponse) error
	Recv() (*STTRequest, error)
	grpc.ServerStream
}

type openVAServiceSTTServer struct {
	grpc.ServerStream
}

func (x *openVAServiceSTTServer) Send(m *StreamingRecognizeResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *openVAServiceSTTServer) Recv() (*STTRequest, error) {
	m := new(STTRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _OpenVAService_HeartBeat_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(OpenVAServiceServer).HeartBeat(&openVAServiceHeartBeatServer{stream})
}

type OpenVAService_HeartBeatServer interface {
	Send(*HeartBeatMessage) error
	Recv() (*HeartBeatMessage, error)
	grpc.ServerStream
}

type openVAServiceHeartBeatServer struct {
	grpc.ServerStream
}

func (x *openVAServiceHeartBeatServer) Send(m *HeartBeatMessage) error {
	return x.ServerStream.SendMsg(m)
}

func (x *openVAServiceHeartBeatServer) Recv() (*HeartBeatMessage, error) {
	m := new(HeartBeatMessage)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _OpenVAService_ClientConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClientMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenVAServiceServer).ClientConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.OpenVAService/ClientConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenVAServiceServer).ClientConfig(ctx, req.(*ClientMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenVAService_HandleServerSideCommand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TTSRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenVAServiceServer).HandleServerSideCommand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.OpenVAService/HandleServerSideCommand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenVAServiceServer).HandleServerSideCommand(ctx, req.(*TTSRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OpenVAService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.OpenVAService",
	HandlerType: (*OpenVAServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "TTSStringToMP3",
			Handler:    _OpenVAService_TTSStringToMP3_Handler,
		},
		{
			MethodName: "ClientConfig",
			Handler:    _OpenVAService_ClientConfig_Handler,
		},
		{
			MethodName: "HandleServerSideCommand",
			Handler:    _OpenVAService_HandleServerSideCommand_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "STT",
			Handler:       _OpenVAService_STT_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "HeartBeat",
			Handler:       _OpenVAService_HeartBeat_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "service.proto",
}

func init() { proto.RegisterFile("service.proto", fileDescriptor_service_5a9383d21dc7bc3c) }

var fileDescriptor_service_5a9383d21dc7bc3c = []byte{
	// 1143 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x56, 0x4d, 0x6f, 0x1b, 0x37,
	0x13, 0xb6, 0xa4, 0xf8, 0x6b, 0x64, 0xc5, 0x0e, 0xdf, 0xbc, 0x8d, 0xec, 0xb8, 0x89, 0xbb, 0x2d,
	0x02, 0x23, 0x28, 0xe4, 0x42, 0xc9, 0xa1, 0x01, 0xfa, 0x01, 0x45, 0xde, 0x24, 0x42, 0x65, 0x45,
	0xd8, 0x5d, 0xa5, 0x87, 0x1e, 0x04, 0x5a, 0x3b, 0x56, 0x88, 0xac, 0xc8, 0x2d, 0x49, 0xd9, 0x51,
	0xdb, 0x53, 0x7b, 0x6f, 0xcf, 0x2d, 0xfa, 0x53, 0xfa, 0x13, 0xfa, 0xa3, 0x0a, 0x92, 0xbb, 0xd6,
	0xca, 0x72, 0x92, 0xdb, 0xce, 0xc3, 0xe7, 0x99, 0xe1, 0x90, 0x33, 0xb3, 0x84, 0x9a, 0x42, 0x79,
	0xce, 0x46, 0xd8, 0x48, 0xa5, 0xd0, 0x82, 0x54, 0x68, 0xca, 0xf6, 0xee, 0x8d, 0x85, 0x18, 0x27,
	0x78, 0x64, 0xa1, 0xd3, 0xe9, 0xd9, 0x51, 0x3c, 0x95, 0x54, 0x33, 0xc1, 0x1d, 0xc9, 0xfb, 0x05,
	0x6e, 0xbf, 0x4c, 0x91, 0xbf, 0x6a, 0x85, 0x28, 0xcf, 0x51, 0x06, 0xa8, 0x52, 0xc1, 0x15, 0x12,
	0x0f, 0xb6, 0x22, 0x7c, 0xab, 0x73, 0xbb, 0x5e, 0x3a, 0x28, 0x1d, 0x6e, 0x06, 0x0b, 0x18, 0xa9,
	0xc3, 0x7a, 0x47, 0xf9, 0x52, 0x0a, 0x59, 0x2f, 0x1f, 0x94, 0x0e, 0x37, 0x82, 0xdc, 0x24, 0x0f,
	0x60, 0x95, 0x69, 0x9c, 0xa8, 0x7a, 0xe5, 0xa0, 0x72, 0x58, 0x6d, 0xee, 0x34, 0x68, 0xca, 0x1a,
	0x5d, 0x76, 0x2a, 0xa9, 0x9c, 0x75, 0x34, 0x4e, 0x02, 0xb7, 0xec, 0x1d, 0x41, 0xad, 0x9d, 0x30,
	0xe4, 0xfa, 0x04, 0x95, 0xa2, 0x63, 0x24, 0xf7, 0x00, 0xc2, 0x99, 0xd2, 0x38, 0x19, 0x0c, 0x3a,
	0xc7, 0x59, 0xd0, 0x02, 0xe2, 0xb5, 0xe0, 0x7f, 0x4e, 0xd0, 0x16, 0xfc, 0x8c, 0x8d, 0x73, 0xd9,
	0x43, 0x58, 0xeb, 0x8a, 0x11, 0x4d, 0xdc, 0x3e, 0xab, 0x4d, 0xe2, 0x02, 0x5a, 0x28, 0xe3, 0x04,
	0x19, 0xc3, 0xfb, 0xb3, 0x02, 0xb5, 0x85, 0x15, 0x13, 0xd4, 0x01, 0x3d, 0x3a, 0xc9, 0x33, 0x2d,
	0x20, 0xe4, 0x01, 0xdc, 0x74, 0x56, 0x97, 0xf2, 0xf1, 0x94, 0x8e, 0xd1, 0xa6, 0xbb, 0x19, 0x5c,
	0x41, 0xc9, 0x67, 0x50, 0x7b, 0x25, 0x92, 0xe9, 0x24, 0x77, 0x5c, 0xaf, 0x58, 0xda, 0x22, 0x68,
	0x4e, 0xb6, 0x4f, 0xa7, 0xea, 0x92, 0x74, 0xc3, 0x9d, 0x6c, 0x11, 0x33, 0x9e, 0x02, 0x54, 0x05,
	0x4f, 0xab, 0xce, 0xd3, 0x02, 0x48, 0x0e, 0xa0, 0x1a, 0x6a, 0x91, 0xe6, 0x9c, 0x35, 0xcb, 0x29,
	0x42, 0x86, 0xd1, 0xc3, 0xb7, 0xf9, 0xe9, 0xd6, 0xd7, 0x1d, 0xa3, 0x00, 0x91, 0x43, 0xd8, 0xee,
	0x4b, 0x3c, 0x67, 0x62, 0xaa, 0x72, 0xd6, 0x86, 0x65, 0x5d, 0x85, 0xdd, 0x9e, 0x4e, 0x85, 0xb8,
	0xf4, 0xb6, 0x99, 0xef, 0xa9, 0x00, 0x92, 0xaf, 0x60, 0xb7, 0x2d, 0xa6, 0x49, 0xdc, 0x13, 0x7a,
	0xc0, 0x63, 0x94, 0x4a, 0x53, 0x1e, 0xe7, 0x0a, 0xb0, 0x8a, 0x77, 0x13, 0xbc, 0xbf, 0x4a, 0xb0,
	0xf3, 0x02, 0xa9, 0xd4, 0x4f, 0x91, 0x5e, 0xba, 0xfc, 0x0e, 0x6e, 0xb9, 0x0a, 0xe8, 0xf0, 0x33,
	0x21, 0x27, 0xb6, 0x7a, 0xb3, 0x7b, 0xfe, 0xd8, 0xde, 0xf3, 0xd2, 0x6a, 0x7e, 0xe5, 0xcb, 0x3a,
	0xf2, 0x04, 0xaa, 0xfd, 0x84, 0xce, 0x50, 0x86, 0x9a, 0x6a, 0x77, 0x91, 0xd5, 0xe6, 0x1d, 0xeb,
	0xa6, 0x80, 0xe7, 0x0e, 0x8a, 0x5c, 0xef, 0x31, 0x90, 0x65, 0x8a, 0x29, 0x9e, 0x9e, 0xb8, 0x30,
	0x0b, 0x8c, 0x8f, 0xf3, 0xe2, 0x99, 0x23, 0xde, 0x3f, 0x25, 0xa8, 0xbf, 0x6b, 0x83, 0x1f, 0x2a,
	0x77, 0xf2, 0x10, 0x76, 0x06, 0xa9, 0x66, 0x13, 0x0c, 0x19, 0x1f, 0xa1, 0x9f, 0x8a, 0xd1, 0x6b,
	0xbb, 0xe5, 0x4a, 0xb0, 0x84, 0x93, 0x08, 0x6e, 0xf7, 0x50, 0x5f, 0x08, 0xf9, 0xc6, 0xf5, 0x46,
	0xd6, 0xe7, 0xb6, 0x08, 0xab, 0xcd, 0x03, 0x9b, 0xe2, 0x75, 0x84, 0x3c, 0xd7, 0x6b, 0xd5, 0xde,
	0x1f, 0x25, 0xb8, 0xfb, 0x1e, 0x15, 0xd9, 0x87, 0xcd, 0x4e, 0xbf, 0x15, 0xc7, 0x12, 0x95, 0xca,
	0x12, 0x98, 0x03, 0x66, 0x42, 0xf4, 0x50, 0x9f, 0x50, 0xf5, 0x26, 0x6b, 0x99, 0xdc, 0x34, 0x2b,
	0xcf, 0xa9, 0xc6, 0x0b, 0x3a, 0xcb, 0xba, 0x24, 0x37, 0xcd, 0x99, 0x1c, 0xf7, 0x42, 0x37, 0x8e,
	0x54, 0xd6, 0x1d, 0x05, 0xc4, 0xfb, 0x19, 0xaa, 0x85, 0x49, 0x42, 0x76, 0xa0, 0x32, 0x08, 0xba,
	0x59, 0x68, 0xf3, 0x49, 0x3e, 0x82, 0xb5, 0x96, 0xd4, 0x4c, 0xe9, 0x2c, 0x66, 0x66, 0x91, 0xdb,
	0xb0, 0xda, 0x4a, 0x4e, 0xa7, 0x93, 0x2c, 0xa0, 0x33, 0x0c, 0x1a, 0x49, 0x3a, 0x7a, 0x93, 0x45,
	0x72, 0x86, 0xf1, 0xd1, 0x45, 0x3e, 0xd6, 0xaf, 0x6d, 0xe7, 0xad, 0x06, 0x99, 0xe5, 0x1d, 0x00,
	0x44, 0x51, 0x18, 0xe0, 0x8f, 0x53, 0x54, 0x9a, 0x10, 0xb8, 0xa1, 0xf1, 0xad, 0xce, 0x82, 0xdb,
	0x6f, 0xef, 0x73, 0xd8, 0xb0, 0x8c, 0x34, 0x99, 0x99, 0xf6, 0x3b, 0xe9, 0x3f, 0x5a, 0x98, 0xa1,
	0x5b, 0x41, 0x11, 0xf2, 0x1e, 0x02, 0x84, 0x51, 0x94, 0xfb, 0xdb, 0x87, 0xcd, 0x30, 0x8a, 0x9e,
	0x4e, 0xcf, 0xce, 0x50, 0x66, 0xec, 0x39, 0xe0, 0xfd, 0x5a, 0x86, 0xbd, 0x50, 0x4b, 0xa4, 0x13,
	0xc6, 0xc7, 0x01, 0x8e, 0xc4, 0x98, 0xb3, 0x9f, 0xf0, 0x72, 0x1a, 0x3f, 0x81, 0x75, 0x89, 0x6a,
	0x9a, 0x68, 0x55, 0x2f, 0xdb, 0xa9, 0x7b, 0xdf, 0x35, 0xc7, 0x15, 0x85, 0xb9, 0xbc, 0xc0, 0xf2,
	0x82, 0x9c, 0x4f, 0x7e, 0x80, 0x5b, 0x2a, 0x45, 0x1c, 0xbd, 0x1e, 0xe2, 0x39, 0x72, 0x3d, 0xd4,
	0xb3, 0xd4, 0xcd, 0xa5, 0x9b, 0xcd, 0xa3, 0x6b, 0x9d, 0xcc, 0xc3, 0x36, 0x42, 0x2b, 0xf4, 0x8d,
	0x2e, 0x9a, 0xa5, 0x18, 0x6c, 0xab, 0x45, 0xc0, 0xeb, 0xc2, 0xf6, 0x15, 0x0e, 0xd9, 0x87, 0x7a,
	0xd8, 0xf7, 0xfd, 0xf6, 0x8b, 0xa1, 0xff, 0xca, 0xef, 0x45, 0xc3, 0x41, 0x2f, 0xec, 0xfb, 0xed,
	0xce, 0xb3, 0x8e, 0x7f, 0xbc, 0xb3, 0x42, 0xee, 0xc2, 0x1d, 0xbf, 0x77, 0x3c, 0x7c, 0xf9, 0x6c,
	0x18, 0x76, 0x7a, 0xcf, 0xbb, 0xfe, 0x70, 0x10, 0x45, 0x7e, 0xd0, 0xea, 0xb5, 0xfd, 0x9d, 0x92,
	0xf7, 0x77, 0x69, 0xf9, 0x10, 0xe6, 0x29, 0x11, 0x1f, 0xb6, 0x68, 0xa2, 0x51, 0x72, 0xaa, 0xd9,
	0x39, 0x9a, 0x8a, 0x34, 0x27, 0xf1, 0x89, 0x4b, 0xc2, 0xee, 0xa2, 0xa0, 0x69, 0xcd, 0x99, 0xc1,
	0x82, 0x8c, 0xec, 0xc2, 0x06, 0x53, 0xc3, 0x33, 0xc6, 0x69, 0x92, 0xff, 0xda, 0x98, 0x7a, 0x66,
	0x4c, 0x73, 0x47, 0x4a, 0xd3, 0x53, 0x96, 0x30, 0xed, 0x4a, 0xb7, 0x1c, 0xcc, 0x01, 0xef, 0xb7,
	0x12, 0xec, 0xbf, 0x2f, 0x8e, 0xa9, 0x6e, 0x2d, 0x29, 0x57, 0x23, 0xc9, 0xd2, 0xbc, 0x70, 0x0a,
	0x88, 0x59, 0x1f, 0x99, 0x3e, 0x8b, 0x91, 0x8f, 0xdc, 0x78, 0x2a, 0x07, 0x05, 0x84, 0x7c, 0x0a,
	0xab, 0x17, 0x42, 0xc6, 0xf9, 0x9f, 0xb5, 0x66, 0x33, 0xfb, 0x5e, 0xc8, 0xd8, 0x4c, 0x97, 0xc0,
	0xad, 0x79, 0xbf, 0x97, 0x60, 0x23, 0xc7, 0xc8, 0x97, 0x00, 0x4a, 0x53, 0xa9, 0x87, 0x66, 0x5e,
	0x64, 0x73, 0x73, 0xb7, 0xe1, 0x9e, 0x05, 0x8d, 0xfc, 0x59, 0xd0, 0x38, 0xce, 0xfa, 0xda, 0x26,
	0x23, 0x75, 0xc4, 0x26, 0x48, 0x1e, 0xc3, 0x06, 0xf2, 0xd8, 0xe9, 0xca, 0x1f, 0xd2, 0xad, 0x23,
	0x8f, 0xad, 0x8a, 0xc0, 0x0d, 0xb3, 0x8b, 0xac, 0xcb, 0xec, 0x77, 0xf3, 0xdf, 0x32, 0xd4, 0xe6,
	0xcf, 0x0c, 0x36, 0x42, 0xd2, 0x84, 0x9b, 0x51, 0x14, 0x86, 0x5a, 0x32, 0x3e, 0x8e, 0xc4, 0x49,
	0xff, 0x11, 0xd9, 0xb6, 0xa9, 0xcc, 0xbb, 0x6b, 0xaf, 0x36, 0x07, 0xd2, 0x64, 0xe6, 0xad, 0x90,
	0xaf, 0xa1, 0x12, 0x46, 0x51, 0x46, 0x9c, 0xb7, 0xcd, 0xde, 0xfd, 0x0f, 0xd4, 0xa8, 0xb7, 0x72,
	0x58, 0xfa, 0xa2, 0x44, 0xbe, 0x85, 0xcd, 0xcb, 0x7f, 0x0b, 0xf9, 0xbf, 0xd5, 0x5c, 0xfd, 0xd7,
	0xec, 0x5d, 0x0f, 0x67, 0x0e, 0xbe, 0x81, 0xad, 0xe2, 0xe3, 0x83, 0xb8, 0x57, 0xc6, 0xc2, 0x03,
	0x66, 0xaf, 0x5e, 0xc0, 0x16, 0xde, 0x28, 0xde, 0x0a, 0x79, 0x0e, 0x77, 0x5e, 0x50, 0x1e, 0x27,
	0xe8, 0x46, 0x59, 0xc8, 0x62, 0x6c, 0x8b, 0xc9, 0x84, 0xf2, 0x78, 0x39, 0xf9, 0x5d, 0x0b, 0x5c,
	0xf7, 0x34, 0xf3, 0x56, 0x4e, 0xd7, 0xec, 0xf1, 0x3f, 0xfa, 0x2f, 0x00, 0x00, 0xff, 0xff, 0x8b,
	0x85, 0xcb, 0x42, 0xf1, 0x09, 0x00, 0x00,
}
