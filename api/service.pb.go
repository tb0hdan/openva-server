// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TTSRequest struct {
	Text                 string   `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TTSRequest) Reset()         { *m = TTSRequest{} }
func (m *TTSRequest) String() string { return proto.CompactTextString(m) }
func (*TTSRequest) ProtoMessage()    {}
func (*TTSRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_c7341370d0252dbf, []int{0}
}
func (m *TTSRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TTSRequest.Unmarshal(m, b)
}
func (m *TTSRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TTSRequest.Marshal(b, m, deterministic)
}
func (dst *TTSRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TTSRequest.Merge(dst, src)
}
func (m *TTSRequest) XXX_Size() int {
	return xxx_messageInfo_TTSRequest.Size(m)
}
func (m *TTSRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TTSRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TTSRequest proto.InternalMessageInfo

func (m *TTSRequest) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type TTSReply struct {
	MP3Response          []byte   `protobuf:"bytes,1,opt,name=MP3Response,proto3" json:"MP3Response,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TTSReply) Reset()         { *m = TTSReply{} }
func (m *TTSReply) String() string { return proto.CompactTextString(m) }
func (*TTSReply) ProtoMessage()    {}
func (*TTSReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_c7341370d0252dbf, []int{1}
}
func (m *TTSReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TTSReply.Unmarshal(m, b)
}
func (m *TTSReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TTSReply.Marshal(b, m, deterministic)
}
func (dst *TTSReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TTSReply.Merge(dst, src)
}
func (m *TTSReply) XXX_Size() int {
	return xxx_messageInfo_TTSReply.Size(m)
}
func (m *TTSReply) XXX_DiscardUnknown() {
	xxx_messageInfo_TTSReply.DiscardUnknown(m)
}

var xxx_messageInfo_TTSReply proto.InternalMessageInfo

func (m *TTSReply) GetMP3Response() []byte {
	if m != nil {
		return m.MP3Response
	}
	return nil
}

func init() {
	proto.RegisterType((*TTSRequest)(nil), "api.TTSRequest")
	proto.RegisterType((*TTSReply)(nil), "api.TTSReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// OpenVAServiceClient is the client API for OpenVAService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OpenVAServiceClient interface {
	TTSStringToMP3(ctx context.Context, in *TTSRequest, opts ...grpc.CallOption) (*TTSReply, error)
}

type openVAServiceClient struct {
	cc *grpc.ClientConn
}

func NewOpenVAServiceClient(cc *grpc.ClientConn) OpenVAServiceClient {
	return &openVAServiceClient{cc}
}

func (c *openVAServiceClient) TTSStringToMP3(ctx context.Context, in *TTSRequest, opts ...grpc.CallOption) (*TTSReply, error) {
	out := new(TTSReply)
	err := c.cc.Invoke(ctx, "/api.OpenVAService/TTSStringToMP3", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OpenVAServiceServer is the server API for OpenVAService service.
type OpenVAServiceServer interface {
	TTSStringToMP3(context.Context, *TTSRequest) (*TTSReply, error)
}

func RegisterOpenVAServiceServer(s *grpc.Server, srv OpenVAServiceServer) {
	s.RegisterService(&_OpenVAService_serviceDesc, srv)
}

func _OpenVAService_TTSStringToMP3_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TTSRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenVAServiceServer).TTSStringToMP3(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.OpenVAService/TTSStringToMP3",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenVAServiceServer).TTSStringToMP3(ctx, req.(*TTSRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OpenVAService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.OpenVAService",
	HandlerType: (*OpenVAServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "TTSStringToMP3",
			Handler:    _OpenVAService_TTSStringToMP3_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}

func init() { proto.RegisterFile("service.proto", fileDescriptor_service_c7341370d0252dbf) }

var fileDescriptor_service_c7341370d0252dbf = []byte{
	// 159 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0x4e, 0x2d, 0x2a,
	0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4e, 0x2c, 0xc8, 0x54, 0x52,
	0xe0, 0xe2, 0x0a, 0x09, 0x09, 0x0e, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x12, 0xe2, 0x62,
	0x29, 0x49, 0xad, 0x28, 0x91, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x02, 0xb3, 0x95, 0x74, 0xb8,
	0x38, 0xc0, 0x2a, 0x0a, 0x72, 0x2a, 0x85, 0x14, 0xb8, 0xb8, 0x7d, 0x03, 0x8c, 0x83, 0x52, 0x8b,
	0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0xc1, 0xca, 0x78, 0x82, 0x90, 0x85, 0x8c, 0x9c, 0xb9, 0x78, 0xfd,
	0x0b, 0x52, 0xf3, 0xc2, 0x1c, 0x83, 0x21, 0x76, 0x09, 0x19, 0x71, 0xf1, 0x85, 0x84, 0x04, 0x07,
	0x97, 0x14, 0x65, 0xe6, 0xa5, 0x87, 0xe4, 0xfb, 0x06, 0x18, 0x0b, 0xf1, 0xeb, 0x25, 0x16, 0x64,
	0xea, 0x21, 0x6c, 0x95, 0xe2, 0x45, 0x08, 0x14, 0xe4, 0x54, 0x2a, 0x31, 0x24, 0xb1, 0x81, 0x1d,
	0x68, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0xd4, 0x59, 0x27, 0x8c, 0xb1, 0x00, 0x00, 0x00,
}
